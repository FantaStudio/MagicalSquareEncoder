<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MagicalSquare"
                    xmlns:inputs="clr-namespace:MagicalSquare.UI.Inputs">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Main.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="InputBase" TargetType="{x:Type inputs:EInput}" BasedOn="{StaticResource ElementBase}">
        <Setter Property="FontFamily" Value="{StaticResource Roboto}" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{StaticResource Grey_5}" />
        <Setter Property="PlaceHolderColor" Value="{StaticResource Grey_3}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="{DynamicResource BorderWidth}" />
        <Setter Property="BorderBrush" Value="{StaticResource Grey_2}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="DescriptionColor" Value="{StaticResource Grey_5}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type inputs:EInput}">
                    <StackPanel x:Name="grid">
                        <Border Padding="{TemplateBinding Padding}" Cursor="IBeam" x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{StaticResource Radius}" Background="{TemplateBinding Background}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost"/>
                                <ScrollViewer IsEnabled="False" IsHitTestVisible="False" x:Name="Placeholder" Foreground="{TemplateBinding PlaceHolderColor}" Visibility="Hidden" Content="{TemplateBinding PlaceHolder}" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <Label x:Name="Desc"  FontFamily="{TemplateBinding FontFamily}" IsHitTestVisible="False" FontSize="12" Cursor="Arrow" Foreground="{TemplateBinding DescriptionColor}" Content="{TemplateBinding Description}"></Label>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsVisible" Value="True"/>
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Placeholder" Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Placeholder" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="Description" Value="">
                            <Setter TargetName="Desc" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Placeholder" Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Input Normal" TargetType="{x:Type inputs:EInput}" BasedOn="{StaticResource InputBase}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Grey_3}"/>
                <Setter Property="Foreground" Value="{StaticResource Grey_3}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource Blue_0}"/>
                <Setter Property="Foreground" Value="{StaticResource Grey_5}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>